
name: Re-tag Image

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tag_from:
        description: 'Tag From'
        required: true
        default: 'latest'
      tag_to:
        description: 'Tag To'
        required: true
        default: 'test'

env:
  NAMESPACE       : "${{ secrets.REGISTRY_NAMESPACE }}"
  REPOSITORY_NAME : "${{ github.ref_name }}"
    ## the branch name (`github.ref_name`) of the github repository is the repository name in the container registry
  TAG_FROM :  ${{ github.event.inputs.tag_from }}
  TAG_TO   :  ${{ github.event.inputs.tag_to }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tagging:
    if: ${{ github.ref_name != 'main' }}
    # The type of runner that the job will run on
    runs-on: windows-2022
    environment: 
      name: publish0

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Pull and Test
        shell: cmd
        env:
          FOLDER_TEST : 'Test/'
        run: |
          ### Define Variables
          set "IMAGE_FROM=%NAMESPACE%/%REPOSITORY_NAME%:%TAG_FROM%"
          ###
          docker pull "%IMAGE_FROM%"
          if exist "%FOLDER_TEST%\" (
            set "TEST_IMAGE=%IMAGE_FROM%"
            for %%F in ("%FOLDER_TEST%\*.cmd" "%FOLDER_TEST%\*.bat") do (
              echo running: %%F
              cmd.exe "%%F"
            )
          )
      
      - name: Tag
        shell: cmd
        run: |
          ### Define Variables
          set "IMAGE_FROM=%NAMESPACE%/%REPOSITORY_NAME%:%TAG_FROM%"
          set "IMAGE_TO=%NAMESPACE%/%REPOSITORY_NAME%:%TAG_TO%"
          ###
          docker tag "%IMAGE_FROM%" "%IMAGE_TO%"

      - name: Push
        shell: cmd
        env:
          SERVER    : "${{ secrets.REGISTRY_SERVER }}"
          USERNAME  : "${{ secrets.REGISTRY_USERNAME }}"
          PASSWORD  : "${{ secrets.REGISTRY_PASSWORD }}"
        run: |
          ### Define Variables
          set "IMAGE_TO=%NAMESPACE%/%REPOSITORY_NAME%:%TAG_TO%"
          ###
          set /p="%PASSWORD%" | docker login --username "%USERNAME%" --password-stdin "%SERVER%"
          docker push "%IMAGE_TO%"
          docker logout

      - name: Clean
        shell: cmd
        run: |
          ### Define Variables
          set "IMAGE_FROM=%NAMESPACE%/%REPOSITORY_NAME%:%TAG_FROM%"
          set "IMAGE_TO=%NAMESPACE%/%REPOSITORY_NAME%:%TAG_TO%"
          ###
          docker rmi --force "%IMAGE_FROM%"
          docker rmi --force "%IMAGE_TO%"
