
name: Build Image (CMD)

# Controls when the workflow will run
on:
  push:
    branches-ignore:
      - main
    paths:
      - Dockerfile

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag Name'
        required: false
        default: 'latest'

  schedule:
    - cron: '0    12   2/3  *    *'
##           │    │    │    │    └─ day of the week  (0 -  6 or SUN-SAT)
##           │    │    │    └────── month            (1 - 12 or JAN-DEC)
##           │    │    └─────────── day of the month (1 - 31)
##           │    └──────────────── hour             (0 - 23)
##           └───────────────────── minute           (0 - 59)

env:
  LOCAL_IMAGE     : "local-image:${{ github.sha }}"
  NAMESPACE       : "${{ secrets.DOCKER_NAMESPACE }}"
  REPOSITORY_NAME : "${{ github.ref_name }}"
    ## the branch name (`github.ref_name`) of the github repository is the repository name in the container registry
  TAG_NAME        : "${{ github.event.inputs.tag_name || 'latest' }}"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  process:
    if: ${{ github.ref_name != 'main' }}
    # The type of runner that the job will run on
    runs-on: windows-2022
    environment: 
      name: publish

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Build Docker Image
        shell: cmd
        run: |
          docker build --no-cache --tag "%LOCAL_IMAGE%" --file "Dockerfile" .
      
      - name: Test
        shell: cmd
        env:
          FOLDER_TEST: 'Test'
        run: |
          setlocal
          if exist "%FOLDER_TEST%\" (
            set "TEST_IMAGE=%LOCAL_IMAGE%"
            for %%F in ("%FOLDER_TEST%\*.cmd" "%FOLDER_TEST%\*.bat") do (
              echo running: %%F
              cmd.exe "%%F"
            )
          )
          endlocal
      
      - name: Publish
        shell: cmd
        env:
          PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          rem Define Variables
          set "IMAGE_NAME=%NAMESPACE%/%REPOSITORY_NAME%:%TAG_NAME%"
          rem
          docker tag "%LOCAL_IMAGE%" "%IMAGE_NAME%"
          for %%A in ("%NAMESPACE%") do set "USERNAME=%%~nxA"
            rem [Variable Substitution](https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/for)
          echo "%PASSWORD%" | docker login --username "%USERNAME%" --password-stdin
          docker push "%IMAGE_NAME%"
          docker logout
